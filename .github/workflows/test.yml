name: test

on:
  push:
  
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
    

jobs:
  #■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  #pull_requestの存在確認
  job1:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    
    outputs:
      run_ci: ${{ steps.step1.outputs.run_ci }}
      
    steps:
      - 
        id: step1
        run: |
          if [[ "${{github.event_name}}" == "push" && "${{ github.ref_name }}" != "main" ]]; then
            
            PR=$(\
              curl \
                -sS \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls?state=open&base=main&head=$GITHUB_REPOSITORY:$GITHUB_REF_NAME" \
            )
            
            if echo "$PR" | jq -e 'if type == "array" then true else false end'; then

              # 配列の場合、要素数が0かどうかをチェック
              RUN_CI=$(echo "$PR" | jq -r 'if . | length == 0 then true else false end')

            else

              # 配列ではない場合(正しくプルリクが取得できていない)
              echo "$PR"
              exit 1
            fi
            
          else
          
            RUN_CI="true"
          
          fi
          
          echo "run_ci=$RUN_CI" >> $GITHUB_OUTPUT
          echo "run_ci=<$RUN_CI>"


  #■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  #静的解析
  job2:
    needs: job1
    if: needs.job1.outputs.run_ci == 'true'
    uses: ./.github/workflows/ci.yml



  #■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  #デプロイ
  job3:
    needs: job2
    if: (github.event_name == 'pull_request') || (github.event_name == 'push' && github.ref_name == 'main')
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "job3"


  #■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
